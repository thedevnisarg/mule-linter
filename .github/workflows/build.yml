name: Java CI

on:
  push:
    branches:
      - 'develop'
      - 'feature/**'
  pull_request:
    branches:
      - 'develop'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set Version
        id: set-version
        run: "./gradlew properties -q | grep version: | awk '{print \"::set-output name=version::\" $2}'"

      - name: Print Version
        run: echo "Version ${{ steps.set-version.outputs.version }}"

      - name: Compile
        run: ./gradlew assemble

      - name: Verify
        run: ./gradlew check -x test
#      - name: JUnit Test
#        run: ./gradlew test

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: ./build/test-results/test/*.xml

      - name: Publish Artifact
        if: github.event_name != 'pull_request'
        env:
          MVN_USER: ${{ secrets.GIT_USER }}
          MVN_PASSWORD: ${{ secrets.GIT_TOKEN }}
        run: |
          echo "$MVN_USER"
          echo "$MVN_PASSWORD"
          ./gradlew publish

      - name: Perform Release
        if: ${{ !contains(steps.set-version.outputs.version, 'SNAPSHOT') && github.event_name != 'pull_request' }}
        run: echo "Releasing version ${{ steps.set-version.outputs.version }}"

      - name: Perform Release
        if: ${{ !contains(steps.set-version.outputs.version, 'SNAPSHOT') && github.event_name != 'pull_request' }}
        env:
          GIT_USER: ${{ secrets.GIT_USER }}
          GIT_PASSWORD: ${{ secrets.GIT_TOKEN }}
        run: |
          git config --local credential.helper "!f() { echo username=\\GIT_USER; echo password=\\$GIT_PASSWORD; }; f"
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USER }}"
          git tag -a v${{ steps.set-version.outputs.version }} -m "Version ${{ steps.set-version.outputs.version }}"
          ./gradlew incrementPatch -Dversion.prerelease=SNAPSHOT
          git add version.properties
          git commit -m "Incrementing to next SNAPSHOT patch version"
          git push --follow-tags

      - name: Create Github Release
        if: ${{ !contains(steps.set-version.outputs.version, 'SNAPSHOT') && github.event_name != 'pull_request' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: v${{ steps.set-version.outputs.version }}
          release_name: Release v${{ steps.set-version.outputs.version }}
          body: ''
          draft: false
          prerelease: false

      - name: Add Release Note and Create Github Release
        if: ${{ !contains(steps.set-version.outputs.version, 'SNAPSHOT') && github.event_name != 'pull_request' }}
        uses: release-drafter/release-drafter@v5
        with:
          version: ${{ steps.set-version.outputs.version }}
          tag: v${{ steps.set-version.outputs.version }}
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}